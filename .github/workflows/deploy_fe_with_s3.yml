name: deploy to aws s3
# main 브랜치에 push 될 때 현재 스크립트 실행 trigger 발동.
on:
  push:
    branches:
      - main
jobs:
  # 워크플로우는 하나 이상의 작업(job)으로 구성. 여기서는 하나의 작업만을 정의.
  build-and-deploy:
    runs-on: ubuntu-latest
    # 각 작업은 여러 step(단계)로 구성.
    steps:
      # actions : github 에서 제공되는 공식 워크플로우.
      # checkout 은 현재 repo 의 main 브랜치 소스 코드를 copy 하는 것.
      # v2 는 actions 에서 제공하는 버전.
      - name: source code checkout
        uses: actions/checkout@v2

      - name: setup node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: npm install
        working-directory: .
        # run 은 직접 사용하고자 하는 명령어.
        run: npm install

      - name: npm build
        working-directory: .
        run: npm run build

      - name: setup aws cli
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY}}
          aws-secret-access-key: ${{secrets.AWS_SECRET}}
          aws-region: "ap-northeast-2"
        
          # 기존 지우고 빌드 넣어주기
      - name: clear s3 bucket
        run: aws s3 rm s3://www.tteia.xyz/ --recursive

      - name: deploy to s3 bucket
        run: aws s3 cp ./dist s3://www.tteia.xyz/ --recursive
          # cloudfront 에서 무효화 생성 버튼을 눌러주는 것과 같다 !
      - name: invalidate cloudfront caches
        run: aws cloudfront create-invalidation --distribution-id EPLILOI974LXR --paths "/*"


